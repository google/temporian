package(
    default_visibility = ["//visibility:public"],
    licenses = ["notice"],
)

# Tests
# =====

py_test(
    name = "test_base",
    srcs = ["test_base.py"],
    srcs_version = "PY3",
    deps = [
        # already_there/absl/testing:absltest
        # already_there/absl/testing:parameterized
        "//temporian/implementation/numpy/data:io",
        "//temporian/test:utils",
    ],
)

py_test(
    name = "test_cumprod",
    srcs = ["test_cumprod.py"],
    srcs_version = "PY3",
    deps = [
        # already_there/absl/testing:absltest
        # already_there/absl/testing:parameterized
        "//temporian/implementation/numpy/data:io",
        "//temporian/core/data:duration",
        "//temporian/test:utils",
    ],
)

py_test(
    name = "test_cumsum",
    srcs = ["test_cumsum.py"],
    srcs_version = "PY3",
    deps = [
        # already_there/absl/testing:absltest
        # already_there/absl/testing:parameterized
        "//temporian/implementation/numpy/data:io",
        "//temporian/core/data:duration",
        "//temporian/test:utils",
    ],
)

py_test(
    name = "test_moving_sum",
    srcs = ["test_moving_sum.py"],
    srcs_version = "PY3",
    deps = [
        # already_there/absl/testing:absltest
        # already_there/absl/testing:parameterized
        "//temporian/implementation/numpy/data:io",
        "//temporian/core/data:duration",
        "//temporian/test:utils",
    ],
)

py_test(
    name = "test_simple_moving_average",
    srcs = ["test_simple_moving_average.py"],
    srcs_version = "PY3",
    deps = [
        # already_there/absl/testing:absltest
        # already_there/absl/testing:parameterized
        "//temporian/implementation/numpy/data:io",
        "//temporian/core/data:duration",
        "//temporian/test:utils",
    ],
)

py_test(
    name = "test_moving_min",
    srcs = ["test_moving_min.py"],
    srcs_version = "PY3",
    deps = [
        # already_there/absl/testing:absltest
        # already_there/absl/testing:parameterized
        "//temporian/implementation/numpy/data:io",
        "//temporian/core/data:duration",
        "//temporian/test:utils",
    ],
)

py_test(
    name = "test_moving_max",
    srcs = ["test_moving_max.py"],
    srcs_version = "PY3",
    deps = [
        # already_there/absl/testing:absltest
        # already_there/absl/testing:parameterized
        "//temporian/implementation/numpy/data:io",
        "//temporian/core/data:duration",
        "//temporian/test:utils",
    ],
)

py_test(
    name = "test_moving_product",
    srcs = ["test_moving_product.py"],
    srcs_version = "PY3",
    deps = [
        # already_there/absl/testing:absltest
        # already_there/absl/testing:parameterized
        "//temporian/implementation/numpy/data:io",
        "//temporian/core/data:duration",
        "//temporian/test:utils",
    ],
)

py_test(
    name = "test_moving_standard_deviation",
    srcs = ["test_moving_standard_deviation.py"],
    srcs_version = "PY3",
    deps = [
        # already_there/absl/testing:absltest
        # already_there/absl/testing:parameterized
        "//temporian/implementation/numpy/data:io",
        "//temporian/core/data:duration",
        "//temporian/test:utils",
    ],
)

py_test(
    name = "test_moving_count",
    srcs = ["test_moving_count.py"],
    srcs_version = "PY3",
    deps = [
        # already_there/absl/testing:absltest
        # already_there/absl/testing:parameterized
        "//temporian/implementation/numpy/data:io",
        "//temporian/core/data:duration",
        "//temporian/test:utils",
    ],
)

py_test(
    name = "test_moving_quantile",
    srcs = ["test_moving_quantile.py"],
    srcs_version = "PY3",
    deps = [
        # already_there/absl/testing:absltest
        # already_there/absl/testing:parameterized
        "//temporian/implementation/numpy/data:io",
        "//temporian/core/data:duration",
        "//temporian/test:utils",
    ],
)
